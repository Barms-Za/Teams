<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AssignedRequestCardChannelHeader" xml:space="preserve">
    <value>New appointment!</value>
  </data>
  <data name="AssignedRequestCardPersonalHeader" xml:space="preserve">
    <value>New appointment assigned to you</value>
  </data>
  <data name="ConsultNeedsReassignment" xml:space="preserve">
    <value>{0} has requested reassignment for this appointment.</value>
  </data>
  <data name="MessageConsultCompleteFail" xml:space="preserve">
    <value>The appointment request could not be completed. It may have already been completed.</value>
  </data>
  <data name="MessageConsultCompleteSuccess" xml:space="preserve">
    <value>Request {0} completed successfully</value>
  </data>
  <data name="MessageDirectMessageError" xml:space="preserve">
    <value>Sorry, I don't know how to respond to messages.</value>
  </data>
  <data name="MessageNotesAddFail" xml:space="preserve">
    <value>The note could not be added.</value>
  </data>
  <data name="MessageNotesAddSuccess" xml:space="preserve">
    <value>Note added successfully.</value>
  </data>
  <data name="MessageNotesEmptyError" xml:space="preserve">
    <value>The note cannot be empty.</value>
  </data>
  <data name="MessagingExtensionOutsideMeetingError" xml:space="preserve">
    <value>Failed to attach to appointment. Attachments can only be added from a meeting conversation.</value>
  </data>
  <data name="MyConsultsDeepLinkLabel" xml:space="preserve">
    <value>My Appointments</value>
  </data>
  <data name="NewRequestCardHeader" xml:space="preserve">
    <value>New appointment!</value>
  </data>
  <data name="ReassignRequestCardHeader" xml:space="preserve">
    <value>Appointment reassignment request</value>
  </data>
  <data name="RequestCardAddButton" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="RequestCardAddNoteButton" xml:space="preserve">
    <value>+ Add note</value>
  </data>
  <data name="RequestCardAssignedTo" xml:space="preserve">
    <value>Assigned to </value>
  </data>
  <data name="RequestCardAssignOtherButton" xml:space="preserve">
    <value>Assign to other</value>
  </data>
  <data name="RequestCardAssignSelfButton" xml:space="preserve">
    <value>Assign to me</value>
  </data>
  <data name="RequestCardCancelButton" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="RequestCardChangeStatusButton" xml:space="preserve">
    <value>Change status</value>
  </data>
  <data name="RequestCardCompleteOption" xml:space="preserve">
    <value>Mark as completed</value>
  </data>
  <data name="RequestCardDetailsButton" xml:space="preserve">
    <value>View details</value>
  </data>
  <data name="RequestCardNoteLabel" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="RequestCardPreferredTimeLabel" xml:space="preserve">
    <value>Preferred time</value>
  </data>
  <data name="RequestCardProceedButton" xml:space="preserve">
    <value>Proceed</value>
  </data>
  <data name="RequestCardQueryLabel" xml:space="preserve">
    <value>Query:</value>
  </data>
  <data name="RequestCardReassignOption" xml:space="preserve">
    <value>Request reassignment</value>
  </data>
  <data name="RequestCardRequestedByLabel" xml:space="preserve">
    <value>Requested by</value>
  </data>
  <data name="RequestCardScheduledTimeLabel" xml:space="preserve">
    <value>Scheduled time</value>
  </data>
  <data name="RequestCardSelectStatusLabel" xml:space="preserve">
    <value>Select a status</value>
  </data>
  <data name="RequestCardStatusLabel" xml:space="preserve">
    <value>Status: </value>
  </data>
  <data name="RequestCardUnassigned" xml:space="preserve">
    <value>Unassigned</value>
  </data>
  <data name="TaskModuleTitleAddNotes" xml:space="preserve">
    <value>Add notes</value>
  </data>
  <data name="TaskModuleTitleAssignOther" xml:space="preserve">
    <value>Assign to other</value>
  </data>
  <data name="TaskModuleTitleAssignSelf" xml:space="preserve">
    <value>Assign to me</value>
  </data>
  <data name="TaskModuleTitleAttach" xml:space="preserve">
    <value>Attach to appointment</value>
  </data>
  <data name="TaskModuleTitleCompleteConsult" xml:space="preserve">
    <value>Complete appointment</value>
  </data>
  <data name="TaskModuleTitleDetails" xml:space="preserve">
    <value>Appointment details</value>
  </data>
  <data name="TaskModuleTitleReassign" xml:space="preserve">
    <value>Request resassignment</value>
  </data>
  <data name="WelcomeCardChannelText1" xml:space="preserve">
    <value>This app helps manage and execute customer appointment requests. Requests will be routed to this Team based on settings configured by an administrator. If you are an administrator, you should install the Appointment Manager Admin app to complete this configuration.</value>
  </data>
  <data name="WelcomeCardChannelText2" xml:space="preserve">
    <value>You can view an aggregated list of requests and their status by adding the Appointment Manager tab to this Team. Additionally, the My Appointments tab displays all requests assigned to you across all Teams.</value>
  </data>
  <data name="WelcomeCardHeader" xml:space="preserve">
    <value>Welcome to the Appointment Manager app</value>
  </data>
  <data name="WelcomeCardPersonalText1" xml:space="preserve">
    <value>This app helps manage and execute customer appointment requests. Requests will be routed to Teams based on settings configured by an administrator. If you are an administrator, you should install the Appointment Manager Admin app to complete this configuration.</value>
  </data>
  <data name="WelcomeCardPersonalText2" xml:space="preserve">
    <value>The My Appointments tab displays all requests assigned to you across all Teams. I will also send you a personal message in this chat when a request is assigned to you.</value>
  </data>
  <data name="WelcomeCardViewConsultsButton" xml:space="preserve">
    <value>View My Appointments</value>
  </data>
</root>